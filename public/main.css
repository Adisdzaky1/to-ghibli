<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ColorifyAI - Image to Anime Converter</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#8b5cf6',
                        secondary: '#c084fc',
                        dark: '#1e293b',
                    },
                    fontFamily: {
                        poppins: ['Poppins', 'sans-serif']
                    }
                }
            }
        }
    </script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #0f172a, #1e293b);
            min-height: 100vh;
            overflow-x: hidden;
        }
        
        .card {
            background: rgba(30, 41, 59, 0.8);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(124, 58, 237, 0.3);
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }
        
        .drop-area {
            border: 2px dashed #8b5cf6;
            border-radius: 12px;
            transition: all 0.3s ease;
        }
        
        .drop-area.active {
            background: rgba(139, 92, 246, 0.1);
            border-color: #c084fc;
        }
        
        .progress-bar {
            height: 6px;
            border-radius: 3px;
            background: rgba(255, 255, 255, 0.1);
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #8b5cf6, #c084fc);
            border-radius: 3px;
            transition: width 0.4s ease;
        }
        
        .result-image {
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease;
        }
        
        .result-image:hover {
            transform: scale(1.02);
        }
        
        .ghibli-badge {
            background: linear-gradient(90deg, #ff6b6b, #ffa502);
        }
        
        .pulse {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(139, 92, 246, 0.7); }
            70% { box-shadow: 0 0 0 10px rgba(139, 92, 246, 0); }
            100% { box-shadow: 0 0 0 0 rgba(139, 92, 246, 0); }
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .loading-dots:after {
            content: '.';
            animation: dots 1.5s steps(5, end) infinite;
        }
        
        @keyframes dots {
            0%, 20% { content: '.'; }
            40% { content: '..'; }
            60% { content: '...'; }
            80%, 100% { content: ''; }
        }
    </style>
</head>
<body class="text-gray-200">
    <!-- Header -->
    <header class="py-6">
        <div class="container mx-auto px-4 flex flex-col items-center">
            <h1 class="text-3xl md:text-4xl font-bold text-center mb-2">
                <span class="bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-600">
                    ColorifyAI
                </span>
            </h1>
            <p class="text-lg text-gray-400 max-w-2xl text-center">
                Transform your photos into stunning anime and Ghibli-style artwork with AI
            </p>
        </div>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Upload Section -->
            <div class="card p-6">
                <h2 class="text-2xl font-bold mb-6 text-center">Upload Your Image</h2>
                
                <!-- Drop Area -->
                <div id="dropArea" class="drop-area p-8 text-center cursor-pointer mb-6">
                    <div class="flex flex-col items-center justify-center py-12">
                        <i class="fas fa-cloud-upload-alt text-4xl text-primary mb-4"></i>
                        <h3 class="text-xl font-semibold mb-2">Drag & Drop your image here</h3>
                        <p class="text-gray-400 mb-4">or</p>
                        <input type="file" id="fileInput" class="hidden" accept="image/*">
                        <label for="fileInput" class="bg-primary hover:bg-purple-600 text-white font-medium py-2 px-6 rounded-lg cursor-pointer transition duration-300">
                            Browse Files
                        </label>
                        <p class="text-gray-400 text-sm mt-4">Supports JPG, PNG, and JPEG files (max 5MB)</p>
                    </div>
                </div>
                
                <!-- Preview -->
                <div id="previewContainer" class="hidden mb-6">
                    <h3 class="text-lg font-semibold mb-3">Image Preview</h3>
                    <div class="flex justify-center">
                        <img id="previewImage" src="" alt="Preview" class="max-w-full max-h-80 rounded-lg">
                    </div>
                </div>
                
                <!-- Style Selection -->
                <div class="mb-6">
                    <h3 class="text-lg font-semibold mb-3">Style Selection</h3>
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <input type="radio" id="animeStyle" name="style" value="anime" class="hidden peer" checked>
                            <label for="animeStyle" class="block p-4 text-center rounded-lg border border-gray-700 cursor-pointer peer-checked:border-primary peer-checked:bg-purple-900/30 transition duration-300">
                                <i class="fas fa-moon-stars text-2xl text-blue-400 mb-2"></i>
                                <p class="font-medium">Anime Style</p>
                            </label>
                        </div>
                        <div>
                            <input type="radio" id="ghibliStyle" name="style" value="ghibli" class="hidden peer">
                            <label for="ghibliStyle" class="block p-4 text-center rounded-lg border border-gray-700 cursor-pointer peer-checked:border-yellow-500 peer-checked:bg-amber-900/30 transition duration-300">
                                <i class="fas fa-paint-brush text-2xl text-yellow-400 mb-2"></i>
                                <p class="font-medium">Ghibli Style</p>
                            </label>
                        </div>
                    </div>
                </div>
                
                <!-- Prompt -->
                <div class="mb-6">
                    <label for="promptInput" class="block text-lg font-semibold mb-3">AI Prompt</label>
                    <textarea id="promptInput" class="w-full bg-slate-800 border border-gray-700 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-primary" rows="3">(masterpiece), best quality</textarea>
                    <p class="text-sm text-gray-400 mt-2">Customize the AI prompt for better results</p>
                </div>
                
                <!-- Process Button -->
                <div class="flex justify-center">
                    <button id="processBtn" class="bg-gradient-to-r from-primary to-secondary text-white font-bold py-3 px-8 rounded-full text-lg hover:opacity-90 transition duration-300 transform hover:scale-105 pulse disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                        <i class="fas fa-wand-magic-sparkles mr-2"></i>Transform Image
                    </button>
                </div>
            </div>
            
            <!-- Result Section -->
            <div class="card p-6">
                <h2 class="text-2xl font-bold mb-6 text-center">Result</h2>
                
                <!-- Status -->
                <div id="statusSection" class="hidden">
                    <div class="flex justify-center mb-6">
                        <div class="w-24 h-24 rounded-full bg-slate-800 flex items-center justify-center">
                            <div id="spinner" class="w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin"></div>
                        </div>
                    </div>
                    
                    <div class="mb-6">
                        <div class="flex justify-between text-sm mb-2">
                            <span>Processing Image</span>
                            <span id="progressText">0%</span>
                        </div>
                        <div class="progress-bar">
                            <div id="progressFill" class="progress-fill" style="width: 0%"></div>
                        </div>
                    </div>
                    
                    <div id="statusMessage" class="text-center text-gray-300">
                        Uploading your image to ColorifyAI servers<span class="loading-dots"></span>
                    </div>
                </div>
                
                <!-- Result -->
                <div id="resultSection" class="hidden">
                    <div class="flex flex-col items-center">
                        <div class="relative mb-6">
                            <img id="resultImage" src="" alt="Result" class="result-image max-w-full max-h-96">
                            <div id="ghibliBadge" class="ghibli-badge hidden absolute -top-3 -right-3 text-white font-bold py-1 px-3 rounded-full text-xs">
                                GHIBLI STYLE
                            </div>
                        </div>
                        
                        <div class="flex flex-wrap justify-center gap-3">
                            <a id="downloadBtn" href="#" class="bg-primary hover:bg-purple-600 text-white font-medium py-2 px-5 rounded-lg transition duration-300">
                                <i class="fas fa-download mr-2"></i>Download
                            </a>
                            <button id="shareBtn" class="bg-slate-700 hover:bg-slate-600 text-white font-medium py-2 px-5 rounded-lg transition duration-300">
                                <i class="fas fa-share-alt mr-2"></i>Share
                            </button>
                            <button id="newImageBtn" class="border border-primary text-primary hover:bg-purple-900/30 font-medium py-2 px-5 rounded-lg transition duration-300">
                                <i class="fas fa-plus mr-2"></i>New Image
                            </button>
                        </div>
                    </div>
                    
                    <div id="imageInfo" class="mt-6 text-center text-sm text-gray-400">
                        <!-- Will be filled with image info -->
                    </div>
                </div>
                
                <!-- Initial Placeholder -->
                <div id="initialPlaceholder" class="flex flex-col items-center justify-center py-20">
                    <i class="fas fa-image text-5xl text-gray-600 mb-4"></i>
                    <h3 class="text-xl font-semibold text-gray-500 mb-2">Your result will appear here</h3>
                    <p class="text-gray-600 max-w-xs text-center">Upload an image and click "Transform Image" to get started</p>
                </div>
            </div>
        </div>
    </main>

    <!-- Features Section -->
    <section class="container mx-auto px-4 py-12">
        <h2 class="text-2xl md:text-3xl font-bold text-center mb-12">How It Works</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div class="card p-6 text-center">
                <div class="w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-upload text-2xl"></i>
                </div>
                <h3 class="text-xl font-bold mb-3">Upload Image</h3>
                <p class="text-gray-400">Select your photo or drag and drop it into the upload area.</p>
            </div>
            <div class="card p-6 text-center">
                <div class="w-16 h-16 bg-secondary rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-cogs text-2xl"></i>
                </div>
                <h3 class="text-xl font-bold mb-3">AI Processing</h3>
                <p class="text-gray-400">Our AI transforms your image into anime or Ghibli-style artwork.</p>
            </div>
            <div class="card p-6 text-center">
                <div class="w-16 h-16 bg-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="fas fa-download text-2xl"></i>
                </div>
                <h3 class="text-xl font-bold mb-3">Download & Share</h3>
                <p class="text-gray-400">Download your transformed image or share it with friends.</p>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="border-t border-slate-800 py-8">
        <div class="container mx-auto px-4 text-center">
            <div class="flex justify-center space-x-6 mb-4">
                <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                    <i class="fab fa-github text-xl"></i>
                </a>
                <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                    <i class="fab fa-twitter text-xl"></i>
                </a>
                <a href="#" class="text-gray-400 hover:text-white transition duration-300">
                    <i class="fab fa-discord text-xl"></i>
                </a>
            </div>
            <p class="text-gray-500">© 2023 ColorifyAI. All rights reserved. This is a demo interface for educational purposes.</p>
        </div>
    </footer>

    <script>
        // DOM Elements
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('fileInput');
        const previewContainer = document.getElementById('previewContainer');
        const previewImage = document.getElementById('previewImage');
        const processBtn = document.getElementById('processBtn');
        const statusSection = document.getElementById('statusSection');
        const resultSection = document.getElementById('resultSection');
        const initialPlaceholder = document.getElementById('initialPlaceholder');
        const resultImage = document.getElementById('resultImage');
        const ghibliBadge = document.getElementById('ghibliBadge');
        const progressFill = document.getElementById('progressFill');
        const progressText = document.getElementById('progressText');
        const statusMessage = document.getElementById('statusMessage');
        const downloadBtn = document.getElementById('downloadBtn');
        const shareBtn = document.getElementById('shareBtn');
        const newImageBtn = document.getElementById('newImageBtn');
        const imageInfo = document.getElementById('imageInfo');
        const promptInput = document.getElementById('promptInput');

        // State variables
        let currentImage = null;
        let currentStyle = 'anime';
        let processing = false;
        let taskId = null;
        
        // Express.js API endpoint
        const API_ENDPOINT = '/api/convert';

        // Event Listeners
        document.addEventListener('DOMContentLoaded', () => {
            // File input change
            fileInput.addEventListener('change', handleFileSelect);
            
            // Style selection
            document.querySelectorAll('input[name="style"]').forEach(radio => {
                radio.addEventListener('change', (e) => {
                    currentStyle = e.target.value;
                });
            });
            
            // Process button
            processBtn.addEventListener('click', processImage);
            
            // New image button
            newImageBtn.addEventListener('click', resetForm);
            
            // Share button
            shareBtn.addEventListener('click', shareResult);
            
            // Drag and drop events
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, preventDefaults, false);
            });
            
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, highlight, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, unhighlight, false);
            });
            
            dropArea.addEventListener('drop', handleDrop, false);
            
            // Click on drop area triggers file input
            dropArea.addEventListener('click', () => {
                fileInput.click();
            });
        });

        // Prevent default drag behaviors
        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        // Highlight drop area
        function highlight() {
            dropArea.classList.add('active');
        }

        // Unhighlight drop area
        function unhighlight() {
            dropArea.classList.remove('active');
        }

        // Handle dropped files
        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }

        // Handle file selection
        function handleFileSelect(e) {
            const files = e.target.files;
            handleFiles(files);
        }

        // Process files
        function handleFiles(files) {
            if (files.length === 0) return;
            
            const file = files[0];
            if (!file.type.match('image.*')) {
                alert('Please select an image file (JPG, PNG, or JPEG)');
                return;
            }
            
            if (file.size > 5 * 1024 * 1024) {
                alert('File size exceeds 5MB limit');
                return;
            }
            
            currentImage = file;
            
            // Show preview
            const reader = new FileReader();
            reader.onload = function(e) {
                previewImage.src = e.target.result;
                previewContainer.classList.remove('hidden');
                processBtn.disabled = false;
            };
            reader.readAsDataURL(file);
        }

        // Process image using Express.js API
        async function processImage() {
            if (!currentImage || processing) return;
            
            processing = true;
            processBtn.disabled = true;
            
            // Show processing UI
            statusSection.classList.remove('hidden');
            resultSection.classList.add('hidden');
            initialPlaceholder.classList.add('hidden');
            
            try {
                // Create FormData to send to Express.js
                const formData = new FormData();
                formData.append('image', currentImage);
                formData.append('prompt', promptInput.value);
                formData.append('style', currentStyle);
                
                updateProgress(10, "Sending image to server");
                
                // Send to Express.js API
                const response = await fetch(API_ENDPOINT, {
                    method: 'POST',
                    body: formData
                });
                
                if (!response.ok) {
                    throw new Error(`Server error: ${response.status}`);
                }
                
                const result = await response.json();
                
                if (result.error) {
                    throw new Error(result.error);
                }
                
                updateProgress(100, "Processing complete!");
                
                // Show result
                setTimeout(() => {
                    showResult(result.imageUrl);
                }, 1000);
            } catch (e) {
                console.error(e);
                alert('Error: ' + e.message);
                resetForm();
            }
        }

        // Update progress
        function updateProgress(percent, message) {
            progressFill.style.width = `${percent}%`;
            progressText.textContent = `${percent}%`;
            statusMessage.textContent = message;
        }

        // Show result
        function showResult(imageUrl) {
            resultImage.src = imageUrl;
            
            // Show Ghibli badge if selected
            if (currentStyle === 'ghibli') {
                ghibliBadge.classList.remove('hidden');
            } else {
                ghibliBadge.classList.add('hidden');
            }
            
            // Update image info
            imageInfo.innerHTML = `
                <div class="flex justify-center space-x-6">
                    <span>Style: <span class="font-medium">${currentStyle === 'ghibli' ? 'Ghibli' : 'Anime'}</span></span>
                    <span>Size: ${formatFileSize(currentImage.size)}</span>
                </div>
            `;
            
            // Set download link
            downloadBtn.href = imageUrl;
            downloadBtn.download = `colorifyai-${currentStyle}-result.jpg`;
            
            // Update UI
            statusSection.classList.add('hidden');
            resultSection.classList.remove('hidden');
            resultSection.classList.add('fade-in');
            
            processing = false;
        }

        // Reset form
        function resetForm() {
            fileInput.value = '';
            previewContainer.classList.add('hidden');
            resultSection.classList.add('hidden');
            initialPlaceholder.classList.remove('hidden');
            processBtn.disabled = true;
            currentImage = null;
            processing = false;
            taskId = null;
            
            // Reset style to default
            document.getElementById('animeStyle').checked = true;
            currentStyle = 'anime';
            
            // Reset prompt
            promptInput.value = '(masterpiece), best quality';
            
            // Reset progress
            updateProgress(0, "Uploading your image to ColorifyAI servers");
        }

        // Share result
        function shareResult() {
            if (!resultImage.src) return;
            
            if (navigator.share) {
                navigator.share({
                    title: 'Check out my ColorifyAI result!',
                    text: 'I transformed my image into anime art using ColorifyAI',
                    url: resultImage.src
                })
                .catch(console.error);
            } else {
                alert('Sharing is not supported in your browser. You can copy the image URL manually.');
            }
        }
        
        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>
</body>
</html>
